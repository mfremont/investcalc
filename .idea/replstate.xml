<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1416054810576">{:repl-history {:ide [], :local [&quot;(require [net.mrf.investcalc.stat :as stat])&quot; &quot;(require [net.mrf.investcalc.stat :as stat :reload])&quot; &quot;(stat/variance-p [0.1M 0.1M 0.1M 0.1M])&quot; &quot;(def s (range 26))&quot; &quot;(def evens (filter even? s))&quot; &quot;(def odds (filter odd? s))&quot; &quot;evens&quot; &quot;(+ evens)&quot; &quot;(reduce + odds)&quot; &quot;(reduce + evens)&quot; &quot;(require [clojure.math.numeric-tower :as math])&quot; &quot;(require '[clojure.math.numeric-tower :as math])&quot; &quot;(math/expt 10.0M 8)&quot; &quot;(math/expt 10 8)&quot; &quot;(require '[net.mrf.investcalc.stat :as stat])&quot; &quot;(stat/scale-decimal 6 0.66666666M\n                    )&quot; &quot;(require '[net.mrf.investcalc.stat :as stat :reload])&quot; &quot;(require '[net.mrf.investcalc.stat :as stat] :reload)&quot; &quot;(stat/scale-decimal 6 0.66666666M)&quot; &quot;(with-precision 8 :rounding HALF_UP (.round *math-context* 0.666666666M))&quot; &quot;(with-precision 8 :rounding HALF_UP (.round 0.666666666M *math-context*))&quot; &quot;(with-precision 8 :rounding HALF_UP (.round 1.666666666M *math-context*))&quot; &quot;(with-precision 8 :rounding HALF_UP (.round 11.666666666M *math-context*))&quot; &quot;(with-precision 8 :rounding HALF_UP (.round 111.666666666M *math-context*))&quot; &quot;(math/sqrt 0.24M)&quot; &quot;(require '[net.mrf.investcalc.stat :as stat] :reload\n         )&quot; &quot;(stat/variance-s [0.1M, 0.2M, 0.01M, 0.666666667M])&quot; &quot;(math/sqrt (stat/variance-s [0.1M, 0.2M, 0.01M, 0.666666667M]))&quot; &quot;(math/sqrt-decimal (stat/variance-s [0.1M, 0.2M, 0.01M, 0.666666667M]))&quot; &quot;(def a [2.82M 1.33M 2.10M -1.75M 4.66M -1.10M\n        3.98M 2.50M 2.02M 2.14M -0.92M 4.31M])&quot; &quot;(def b [3.75M 1.93M 2.34M -1.34M 5.09M -2.90M\n        3.14M 4.60M 3.05M 2.53M -3.46M 4.57M])&quot; &quot;(let [[mean-a n] (stat/mean-n a)\n      deviationa-a (fn [x] (- x mean-a))]\n  (map deviationa-a a))&quot; &quot;(with-precision 16 :rounding HALF_EVEN \n                   (let [[mean-a n] (stat/mean-n a)\n                         deviationa-a (fn [x] (- x mean-a))]\n                     (map deviationa-a a)))&quot; &quot;(map * (range 4) (range 4))&quot;], :remote []}}</component>
</project>

